package com.mart.controller;

import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.ws.rs.FormParam;

import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.commons.CommonsMultipartFile;
import org.springframework.web.servlet.ModelAndView;

import com.mart.model.Item;
import com.mart.service.ItemService;
import com.mart.service.UserService;

@Controller
@RequestMapping("admin")
public class AdminController {
	private static final Logger log = Logger.getLogger(AdminController.class);
	
	@Autowired
	private UserService userService;
	@Autowired
	private ItemService itemService;

	@RequestMapping(method = RequestMethod.GET,value="home")
	public ModelAndView home(){
		log.info("in home");
		return new ModelAndView("home");
	}
	
	@RequestMapping(method = RequestMethod.GET,value="viewItems")
	public ModelAndView viewItems(){
		log.info("in viewItems");
		List<Item> items=itemService.viewAllItem();
		
		return new ModelAndView("viewItems","command",items);
	}
	
	@RequestMapping(method = RequestMethod.GET,value="addItems")
	public ModelAndView addItems(){
		log.info("in addItems");
		return new ModelAndView("addItems","command",new Item());
	}
	
	@RequestMapping(method = RequestMethod.GET,value="viewShops")
	public ModelAndView viewShops(){
		log.info("in viewShops");
		return new ModelAndView("viewShops");
	}
	
	@RequestMapping(method = RequestMethod.GET,value="addShops")
	public ModelAndView addShops(){
		log.info("in addShops");
		return new ModelAndView("home");
	}
	@RequestMapping(method = RequestMethod.POST, value = "addItems")
	public ModelAndView addItems(@ModelAttribute("command") Item item,
			BindingResult errors,HttpServletRequest req,@RequestParam("itemImage") CommonsMultipartFile  file) {
		try {
			byte barr[]=file.getBytes(); 
			String dbLoc = "resources\\items\\"+item.getItemName()+((int)(Math.random()*1000))+file.getOriginalFilename().substring(file.getOriginalFilename().lastIndexOf("."));
			File f = new File(req.getSession().getServletContext().getRealPath("/")+dbLoc);
			BufferedOutputStream bout=new BufferedOutputStream(new FileOutputStream(f));  
		        bout.write(barr);  
		        bout.flush();  
		        bout.close();  

			log.info("IN AddItems Mthds");
			log.info("Item Name:::"+item.getItemName());
			log.info("Item Brand:::"+item.getItemBrand());
			log.info("DB file location :  "+dbLoc);
			log.info("Item Image:new file::"+f.getAbsolutePath());
			item.setItemImage(dbLoc);
		    itemService.addItem(item);
				
		        
			return new ModelAndView("viewItems");
		} catch (Exception e) {
			log.info(e);
			errors.reject("InternalServerError");
			return new ModelAndView("addItems");
		}
	}
	
}
